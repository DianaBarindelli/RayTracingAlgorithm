import "../src/hdrimage.nim"
import "../src/color.nim"
import "../src/utils.nim"
import std/[streams, random, sequtils]

#var strmWrite = newFileStream("colored_image1.pfm", fmWrite)
var hdrImageWrite = newHdrImage(3, 3, hdrimage.Endianness.littleEndian)
var k: int = 0
# Set pixels
for i in 0..hdrImageWrite.width-1:
    for j in countdown(hdrImageWrite.height-1, 0):
        hdrImageWrite.set_pixel(i,j, newColor(
          10000.0,
          10000.0,
          10000.0
        ))

# refbytes must be the same as the ones held in pixels (view from xxd)
let refbytes = @[byte 0x50, 0x46, 0x0a, 0x33, 0x20, 0x33, 0x0a, 0x2d, 0x31, 0x2e, 0x30, 0x0a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0xaa, 0x3e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0x2a, 0x3e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0x2a, 0x3e, 0x00, 0x00, 0x00, 0x3f,
  0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0x2a, 0x3e, 0xab, 0xaa, 0xaa, 0x3e,
  0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0x2a, 0x3e, 0xab, 0xaa, 0x2a, 0x3e,
  0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0xaa, 0x3e, 0xab, 0xaa, 0x2a, 0x3f,
  0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0xaa, 0x3e, 0x00, 0x00, 0x00, 0x3f,
  0x00, 0x00, 0x00, 0x00, 0xab, 0xaa, 0xaa, 0x3e, 0xab, 0xaa, 0xaa, 0x3e]

var strstrm: StringStream = newStringStream("") # Create empty stringstream
hdrImageWrite.write_pfm(strstrm) # write pixels into stream
let res = charSeqToByte(strstrm.data.toSeq()) # convert string-encoded bytes to seq of bytes
assert refbytes == res